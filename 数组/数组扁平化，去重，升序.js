/**
 * 已知如下数组，编写一个程序，将数组扁平化并去重，得到一个升序的数组
var arr = [[1,2,3], [3,4,4,5], [6,7,8,9, [11,12, [12, 15]]], 10]
 */
function flatten(arr) {
  const result = []
  for (const el of arr) {
    if (Array.isArray(el)) {
      result.push(...flatten(el))
    } else {
      result.push(el)
    }
  }
  return [...new Set(result)].sort((a, b) => a - b)
}

var arr = [[1, 2, 3], [3, 4, 4, 5], [6, 7, 8, 9, [11, 12, [12, 15]]], 10]
console.log(flatten(arr)) // [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15]

// 这里，我们定义了一个函数 flatten，它会遍历数组的每个元素。如果元素是一个数组，那么函数会递归调用自身来处理这个数组；否则，它会把元素添加到结果数组中。

// 得到扁平化的数组后，我们使用 new Set() 来去重，这个方法会自动删除重复的元素。然后我们使用展开运算符 (...) 把 Set 对象转换回数组。

// 最后，我们使用 sort() 方法来对结果数组进行排序。这个方法需要一个比较函数，我们提供了一个简单的 a - b 来按升序进行排序。
